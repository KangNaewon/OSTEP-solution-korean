1.  두 개의 작업과 두 개의 큐를 무작위로 구성하여 실행시켜 보시오. 각 문제에 대한 MLFQ 실행 추적을 계산하시오.
    문제를 쉽게 하기 위해 각 작업의 길이를 제한하고 입출력은 하지 않는다고 가정하시오.

A.  두 작업은 최상위 우선순위 큐에서 라운드로빈으로 실행되다가 주어진 타임슬라이스 하나 분량의 실행시간 할당량을
    모두 소모한 실행시간이 긴 작업의 우선순위가 떨어진 다음, 다른 작업이 실행된다. 이 과정을 두 작업이 모두 
    완료될 때까지 반복한다.

2.  이 장의 예제를 재현하려면 스케줄러를 어떻게 실행해야 하는가?

A.

3.  라운드 로빈 스케줄러처럼 동작시키려면 스케줄러의 매개변수를 어떻게 설정해야 하는가?

A.  같은 큐에 존재하는 작업들은 같은 타임슬라이스를 가진다. 하나의 큐만 가지도록 설정한다.

4.  두 개의 작업과 스케줄러 매개변수를 가진 워크로드를 고안하시오. 
    두 작업 중 하나의 작업은 옛날 규칙 4a 및 4b를 이용하여(-S 플래그를 켠다)
    스케줄러를 자신에게 유리하게 동작하도록 만들어 특정 구간에서 99%의 CPU를 차지하도록 고안해야 한다.

A. -n 3 -q 10 -l 0,50,0:0,50,9 -i 1 -S -c
    ioFreq을 9로 두어 타임슬라이스인 10 직전에 IO에 돌입하되 IO 수행시간이 1ms이기 때문에
    우선순위를 그대로 유지하면서 IO작업을 마치자마자 다시 CPU를 할당받는다.
    결과적으로 CPU를 독점할 수 있게된다.

5.  가장 높은 우선순위 큐의 타임 퀀텀의 길이가 10 ms인 시스템이 있다고 하자.
    하나의 장기 실행(및 잠재적인 기아 위험) 작업이 적어도 5%의 CPU를 사용할 수 있도록 보장하려면
    얼마나 자주 가장 높은 우선순위로 이동시켜야 하는가(-B 플래그 켠다)?

A.  200ms이다. 만약 기아에 빠질 위험이 있는 작업이 있다해도 
    200ms마다 우선순위 상향을 해준다면 최소한 하나의 타임슬라이스 크기인 10ms동안
    CPU를 할당받을 수 있으므로 5%의 CPU를 사용할 수 있도록 보장 가능하다.

6.  스케줄링에서 제기되는 질문 중 하나는, 입출력이 방금 종료된 작업은 큐의 어느 쪽에 추가해야 하는가이다.
    플래그 -I가 시뮬레이터의 이 행동 양식을 변경한다. 몇 개의 워크로드를 가지고 실험하여 이 플래그의 영향을 확인할 수 있는지 보라.

A.  IO를 가장 최근에 종료한 작업이 가장 높은 우선순위를 가지게 되므로 IO-burst 작업을 우선적으로 처리하게 되고,
    따라서 응답시간이 개선되고 시스템의 전체적인 효율성은 증가할 수 있다. 하지만 CPU-burst 작업의 우선순위가
    낮게 유지될 수 있으므로 이 작업들의 기아 위험이 있다.